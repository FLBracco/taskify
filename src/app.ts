import express from 'express';
import session from 'express-session';
import cookieParser from 'cookie-parser';
import userCreateRoutes from './routes/register.routes.js';
import loginRoutes from './routes/login.routes.js';
import { errorHandler } from './middlewares/errors.js';
import { authMiddleware } from './middlewares/auth.js';

const app = express();

app.use(express.json());
app.use(cookieParser());
app.use(session({
  secret: process.env.SESSION_SECRET!, // 游댏 clave secreta para firmar la cookie
  resave: false,                        // 游대 no vuelve a guardar la sesi칩n si no hubo cambios
  saveUninitialized: false,            // 游뛂 no guarda sesiones vac칤as
  cookie: {
    secure: false,        // 丘멆잺 ponelo en true solo si us치s HTTPS (por ahora false)
    httpOnly: true,       // 游뛂 impide que JS acceda a la cookie (m치s seguro)
    maxAge: 1000 * 60 * 60 * 24 // 游뎹 1 d칤a de duraci칩n
  }
}));

app.get('/', (_req, res)=>{
    res.status(200).json({message: "Servidor prendido correctamente!"});
});

app.use('/usuarios', userCreateRoutes);
app.use('/', loginRoutes);

app.use(errorHandler);

export default app;